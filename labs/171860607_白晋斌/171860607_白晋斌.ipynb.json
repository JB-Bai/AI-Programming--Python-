{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# 人工智能程序设计作业"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## 171860607 白晋斌"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### written by jupyter"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "1.假设有4个人每周喝奶茶的杯数分别是1、3、4、7，又假设这4个人的体重（kg）分别是50、65、60、63，请分别用数学、基于NumPy数组和基于pandas的corr()方法来计算两者之间的皮尔逊相关系数。"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "基于数学计算皮尔逊相关系数"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 30,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "3.75"
      ]
     },
     "execution_count": 30,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#4个人平均每周喝奶茶的杯数是\n",
    "(1+3+4+7)/4"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 31,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "59.5"
      ]
     },
     "execution_count": 31,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#4个人的平均体重是\n",
    "(50+65+60+63)/4"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 32,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "33.5"
      ]
     },
     "execution_count": 32,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#分子为\n",
    "(1-3.75)*(50-59.5)+(3-3.75)*(65-59.5)+(4-3.75)*(60-59.5)+(7-3.75)*(63-59.5)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 35,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "49.93746088859545"
      ]
     },
     "execution_count": 35,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#分母为\n",
    "math.sqrt((1-3.75)**2+(3-3.75)**2+(4-3.75)**2+(7-3.75)**2)*math.sqrt((50-59.5)**2+(65-59.5)**2+(60-59.5)**2+(63-59.5)**2)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 36,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0.6708390735911568"
      ]
     },
     "execution_count": 36,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#皮尔逊相关系数为\n",
    "33.5/49.93746088859545"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "基于NumPy数组计算皮尔逊相关系数"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "0.6708390735911568\n"
     ]
    }
   ],
   "source": [
    "import numpy as np\n",
    "import math\n",
    "\n",
    "x=np.array([1,3,4,7])\n",
    "y=np.array([50,65,60,63])\n",
    "x_mean=np.mean(x)\n",
    "y_mean=np.mean(y)\n",
    "u=sum((x-x_mean)*(y-y_mean))\n",
    "l=math.sqrt(sum((x-x_mean)**2))*math.sqrt(sum((y-y_mean)**2))\n",
    "print(u/l)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "基于pandas的corr()方法计算皮尔逊相关系数"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "          x         y\n",
      "x  1.000000  0.652718\n",
      "y  0.652718  1.000000\n"
     ]
    }
   ],
   "source": [
    "import pandas as pd\n",
    "\n",
    "x=[1,3,4,7]\n",
    "y=[50,65,64,63]\n",
    "df=pd.DataFrame()\n",
    "df['x']=x\n",
    "df['y']=y\n",
    "print(df.corr())\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "2.利用Tushare包中的接口函数获取某公司2019年第一季度的股票数据并完成如下数据处理和分析任务："
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "(1) 数据只保留date、open、high、close、low和volume这几个属性，并按时间先后顺序对数据进行排序:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Task-1:\n",
      "             open   high  close    low      volume\n",
      "date                                              \n",
      "2019-01-02   9.39   9.42   9.19   9.16   539386.31\n",
      "2019-01-03   9.18   9.33   9.28   9.15   415537.97\n",
      "2019-01-04   9.24   9.82   9.75   9.22  1481159.00\n",
      "2019-01-07   9.84   9.85   9.74   9.63   865687.69\n",
      "2019-01-08   9.73   9.74   9.66   9.62   402388.12\n",
      "2019-01-09   9.74  10.08   9.94   9.70  1233486.38\n",
      "2019-01-10   9.87  10.20  10.10   9.86  1071817.62\n",
      "2019-01-11  10.11  10.22  10.20  10.05   696364.56\n",
      "2019-01-14  10.22  10.25  10.11  10.07   500443.59\n",
      "2019-01-15  10.11  10.28  10.24  10.09   542160.56\n",
      "2019-01-16  10.24  10.50  10.48  10.23   977699.38\n",
      "2019-01-17  10.54  10.57  10.25  10.17   882811.94\n",
      "2019-01-18  10.34  10.49  10.43  10.28   738793.25\n",
      "2019-01-21  10.34  10.47  10.34  10.32   659355.75\n",
      "2019-01-22  10.34  10.44  10.28  10.26   424413.56\n",
      "2019-01-23  10.29  10.47  10.35  10.29   537876.62\n",
      "2019-01-24  10.40  10.55  10.52  10.37   679240.88\n",
      "2019-01-25  10.56  11.04  11.00  10.55  2108362.00\n",
      "2019-01-28  11.04  11.14  10.94  10.88  1035909.75\n",
      "2019-01-29  10.96  11.07  11.00  10.77   826631.12\n",
      "2019-01-30  10.95  11.18  10.95  10.86   712001.06\n",
      "2019-01-31  10.98  11.20  11.10  10.94   831622.75\n",
      "2019-02-01  11.20  11.25  11.20  10.96  1014270.06\n",
      "2019-02-11  11.08  11.21  11.21  10.97   801936.62\n",
      "2019-02-12  11.20  11.31  11.19  11.03   959936.88\n",
      "2019-02-13  11.19  11.41  11.38  11.12  1137365.75\n",
      "2019-02-14  11.30  11.33  11.25  11.19   869185.19\n",
      "2019-02-15  11.23  11.23  10.95  10.90  1100127.50\n",
      "2019-02-18  11.05  11.36  11.36  11.04  1255522.25\n",
      "2019-02-19  11.36  11.62  11.27  11.24  1270882.12\n",
      "2019-02-20  11.33  11.53  11.41  11.25   832629.81\n",
      "2019-02-21  11.38  11.55  11.36  11.28   754246.50\n",
      "2019-02-22  11.35  11.57  11.54  11.15  1184047.75\n",
      "2019-02-25  11.70  12.64  12.55  11.57  2824935.00\n",
      "2019-02-26  12.55  12.57  12.20  12.15  2017545.00\n",
      "2019-02-27  12.24  12.66  12.40  12.15  1979013.88\n",
      "2019-02-28  12.44  12.61  12.36  12.27  1113099.88\n",
      "2019-03-01  12.48  12.78  12.76  12.20  1712679.25\n",
      "2019-03-04  12.70  13.38  12.99  12.62  2456830.50\n",
      "2019-03-05  12.91  13.29  13.06  12.84  1408422.25\n",
      "2019-03-06  13.06  13.15  13.08  12.84  1245760.12\n",
      "2019-03-07  13.06  13.06  12.74  12.55  1782057.25\n",
      "2019-03-08  12.49  12.70  12.30  12.25  1778162.12\n",
      "2019-03-11  12.30  12.49  12.32  12.05  1157650.75\n",
      "2019-03-12  12.49  12.64  12.36  12.24  1411794.88\n",
      "2019-03-13  12.34  12.55  12.37  12.13  1269427.25\n",
      "2019-03-14  12.33  12.62  12.43  12.27  1057467.88\n",
      "2019-03-15  12.34  12.68  12.50  12.34  1045406.00\n",
      "2019-03-18  12.53  12.94  12.91  12.32  1486454.75\n",
      "2019-03-19  12.92  12.94  12.79  12.61   957196.50\n",
      "2019-03-20  12.68  12.88  12.75  12.62   929996.38\n",
      "2019-03-21  12.77  12.80  12.69  12.58   860140.81\n",
      "2019-03-22  12.69  12.74  12.59  12.50   713502.06\n",
      "2019-03-25  12.40  12.40  12.11  12.10  1179883.25\n",
      "2019-03-26  12.23  12.29  12.10  12.01   935393.25\n",
      "2019-03-27  12.24  12.47  12.38  12.18   922826.81\n",
      "2019-03-28  12.31  12.31  12.22  12.10   732467.44\n",
      "2019-03-29  12.26  12.82  12.82  12.21  1669506.38\n"
     ]
    }
   ],
   "source": [
    "import tushare as ts\n",
    "import pandas as pd\n",
    "import numpy as np\n",
    "import matplotlib.pyplot as plt\n",
    "\n",
    "df = ts.get_hist_data(code='000001',start='2019-01-01',end='2019-03-31')\n",
    "     # 平安银行\n",
    "lst = [ 'open', 'high', 'close', 'low', 'volume'] #date is in the df.index\n",
    "data=df[lst]\n",
    "data=data.sort_index()\n",
    "print('Task-1:')\n",
    "print(data)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "(2) 输出这一季度内成交量最低和最高那两天的日期和分别的成交量:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 38,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Task-2:\n",
      "minimum volume:\n",
      "                volume\n",
      "date                 \n",
      "2019-01-08  402388.12\n",
      "maximum volume:\n",
      "                volume\n",
      "date                 \n",
      "2019-02-25  2824935.0\n"
     ]
    }
   ],
   "source": [
    "print('Task-2:')\n",
    "data2=data[['volume']]\n",
    "data2=data2.sort_values(by='volume')\n",
    "print('minimum volume:\\n',data2.head(1))\n",
    "print('maximum volume:\\n',data2.tail(1))"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "(3) 列出成交量在1000000以上的记录:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Task-3:\n",
      "             open   high  close    low      volume\n",
      "date                                              \n",
      "2019-01-04   9.24   9.82   9.75   9.22  1481159.00\n",
      "2019-01-09   9.74  10.08   9.94   9.70  1233486.38\n",
      "2019-01-10   9.87  10.20  10.10   9.86  1071817.62\n",
      "2019-01-25  10.56  11.04  11.00  10.55  2108362.00\n",
      "2019-01-28  11.04  11.14  10.94  10.88  1035909.75\n",
      "2019-02-01  11.20  11.25  11.20  10.96  1014270.06\n",
      "2019-02-13  11.19  11.41  11.38  11.12  1137365.75\n",
      "2019-02-15  11.23  11.23  10.95  10.90  1100127.50\n",
      "2019-02-18  11.05  11.36  11.36  11.04  1255522.25\n",
      "2019-02-19  11.36  11.62  11.27  11.24  1270882.12\n",
      "2019-02-22  11.35  11.57  11.54  11.15  1184047.75\n",
      "2019-02-25  11.70  12.64  12.55  11.57  2824935.00\n",
      "2019-02-26  12.55  12.57  12.20  12.15  2017545.00\n",
      "2019-02-27  12.24  12.66  12.40  12.15  1979013.88\n",
      "2019-02-28  12.44  12.61  12.36  12.27  1113099.88\n",
      "2019-03-01  12.48  12.78  12.76  12.20  1712679.25\n",
      "2019-03-04  12.70  13.38  12.99  12.62  2456830.50\n",
      "2019-03-05  12.91  13.29  13.06  12.84  1408422.25\n",
      "2019-03-06  13.06  13.15  13.08  12.84  1245760.12\n",
      "2019-03-07  13.06  13.06  12.74  12.55  1782057.25\n",
      "2019-03-08  12.49  12.70  12.30  12.25  1778162.12\n",
      "2019-03-11  12.30  12.49  12.32  12.05  1157650.75\n",
      "2019-03-12  12.49  12.64  12.36  12.24  1411794.88\n",
      "2019-03-13  12.34  12.55  12.37  12.13  1269427.25\n",
      "2019-03-14  12.33  12.62  12.43  12.27  1057467.88\n",
      "2019-03-15  12.34  12.68  12.50  12.34  1045406.00\n",
      "2019-03-18  12.53  12.94  12.91  12.32  1486454.75\n",
      "2019-03-25  12.40  12.40  12.11  12.10  1179883.25\n",
      "2019-03-29  12.26  12.82  12.82  12.21  1669506.38\n"
     ]
    }
   ],
   "source": [
    "print('Task-3:')\n",
    "print(data[data.volume>1000000])"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "(4) 计算这半年中收盘价（close）高于开盘价（open）的天数:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 41,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Task-4:\n",
      "num of days whose 'close' is higher than 'open': 32\n"
     ]
    }
   ],
   "source": [
    "print('Task-4:')\n",
    "count=0\n",
    "count+=data.apply(lambda x:x['close']>x['open'], axis=1)\n",
    "updays=count[count>0].count()\n",
    "print('num of days whose \\'close\\' is higher than \\'open\\':',updays)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "(5) 计算前后两天开盘价的涨跌情况，用两种方式表示，第一种输出每两天之间的差值（后一天减去前一天），第二种输出一个开盘价涨跌列表，涨用1表示，跌用-1表示；[提示：可使用diff()方法和sign()函数]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Task-5:\n",
      "            up&down_way1  up&down_way2\n",
      "date                                  \n",
      "2019-01-02           NaN           NaN\n",
      "2019-01-03         -0.21          -1.0\n",
      "2019-01-04          0.06           1.0\n",
      "2019-01-07          0.60           1.0\n",
      "2019-01-08         -0.11          -1.0\n",
      "2019-01-09          0.01           1.0\n",
      "2019-01-10          0.13           1.0\n",
      "2019-01-11          0.24           1.0\n",
      "2019-01-14          0.11           1.0\n",
      "2019-01-15         -0.11          -1.0\n",
      "2019-01-16          0.13           1.0\n",
      "2019-01-17          0.30           1.0\n",
      "2019-01-18         -0.20          -1.0\n",
      "2019-01-21          0.00           0.0\n",
      "2019-01-22          0.00           0.0\n",
      "2019-01-23         -0.05          -1.0\n",
      "2019-01-24          0.11           1.0\n",
      "2019-01-25          0.16           1.0\n",
      "2019-01-28          0.48           1.0\n",
      "2019-01-29         -0.08          -1.0\n",
      "2019-01-30         -0.01          -1.0\n",
      "2019-01-31          0.03           1.0\n",
      "2019-02-01          0.22           1.0\n",
      "2019-02-11         -0.12          -1.0\n",
      "2019-02-12          0.12           1.0\n",
      "2019-02-13         -0.01          -1.0\n",
      "2019-02-14          0.11           1.0\n",
      "2019-02-15         -0.07          -1.0\n",
      "2019-02-18         -0.18          -1.0\n",
      "2019-02-19          0.31           1.0\n",
      "2019-02-20         -0.03          -1.0\n",
      "2019-02-21          0.05           1.0\n",
      "2019-02-22         -0.03          -1.0\n",
      "2019-02-25          0.35           1.0\n",
      "2019-02-26          0.85           1.0\n",
      "2019-02-27         -0.31          -1.0\n",
      "2019-02-28          0.20           1.0\n",
      "2019-03-01          0.04           1.0\n",
      "2019-03-04          0.22           1.0\n",
      "2019-03-05          0.21           1.0\n",
      "2019-03-06          0.15           1.0\n",
      "2019-03-07          0.00           0.0\n",
      "2019-03-08         -0.57          -1.0\n",
      "2019-03-11         -0.19          -1.0\n",
      "2019-03-12          0.19           1.0\n",
      "2019-03-13         -0.15          -1.0\n",
      "2019-03-14         -0.01          -1.0\n",
      "2019-03-15          0.01           1.0\n",
      "2019-03-18          0.19           1.0\n",
      "2019-03-19          0.39           1.0\n",
      "2019-03-20         -0.24          -1.0\n",
      "2019-03-21          0.09           1.0\n",
      "2019-03-22         -0.08          -1.0\n",
      "2019-03-25         -0.29          -1.0\n",
      "2019-03-26         -0.17          -1.0\n",
      "2019-03-27          0.01           1.0\n",
      "2019-03-28          0.07           1.0\n",
      "2019-03-29         -0.05          -1.0\n"
     ]
    }
   ],
   "source": [
    "print('Task-5:')\n",
    "data['up&down_way1'] = data['open'].diff()# df.diff()==df.shift()-df\n",
    "data['up&down_way2']=np.sign(data['up&down_way1'])\n",
    "print(data[['up&down_way1','up&down_way2']])"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "(6) 计算每月收盘价的平均值（提示：可使用apply()方法）。\n",
    "\n",
    "[提示：groupby()还常常与apply()函数连用，apply()函数可将数据分拆、应用和汇总，使用自定义函数更灵活地进行各类数据统计。apply()函数的自由度很高，它的最基本形式为“DataFrame.apply(func, axis = 0)”，func是函数，可以自己实现，默认axis为0，表示apply()函数会自动遍历DataFrame的每一列数据（一个Series）按相应函数功能对其进行处理，处理结束后将所有结果组合后返回，若axis设为1则遍历处理DataFrame的每一行数据。]\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Task-6:\n",
      "January:10.265909  February:11.575333  March:12.584286\n"
     ]
    }
   ],
   "source": [
    "print('Task-6:')\n",
    "data6_1=data['2019-01-01':'2019-01-31']\n",
    "data6_2 = data['2019-02-01':'2019-02-29']\n",
    "data6_3 = data['2019-03-01':'2019-03-31']\n",
    "aver1=data6_1['close'].mean()\n",
    "aver2=data6_2['close'].mean()\n",
    "aver3 = data6_3['close'].mean()\n",
    "print('January:%f  February:%f  March:%f'%(aver1,aver2,aver3))"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "(7) 绘制2019年1月该股票最高价high和最低价low的折线图:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 65,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Task-7: as picture1\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 864x432 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "print('Task-7: as picture1')\n",
    "data7=data['2019-01-01':'2019-01-31']\n",
    "data[['high','low']].plot(figsize=(12,6))\n",
    "plt.legend(loc = 2)\n",
    "plt.xlabel(\"date\", fontsize=14)\n",
    "plt.ylabel(\"prices\", fontsize=14)\n",
    "plt.title('Line Chart of Stock Maximum and Minimum Prices in 2019-01',fontsize=18)\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "(8) 绘制该股票在此季度内每日收盘价与开盘价之差与当日成交量之间的散点图。"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 62,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Task-8: as picture2\n"
     ]
    },
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 864x432 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "print('Task-8: as picture2')\n",
    "data['difference']=data.apply(lambda x:x['close']-x['open'],axis=1)\n",
    "plt.figure(figsize=(12,6)) \n",
    "plt.scatter(data['difference'],data['volume'],s=40)\n",
    "plt.title(\"Scatter Chart\", fontsize=18)\n",
    "plt.ylabel(\"volume \", fontsize=14)\n",
    "plt.xlabel(\"changed (close - open)\", fontsize=14)\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 63,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "            difference    volume\n",
      "difference    1.000000  0.424093\n",
      "volume        0.424093  1.000000\n"
     ]
    }
   ],
   "source": [
    "#额外思考 每日收盘价与开盘价之差与当日成交量之间 是否具有相关性？\n",
    "import pandas as pd\n",
    "\n",
    "df=pd.DataFrame()\n",
    "df['difference']=data['difference']\n",
    "df['volume']=data['volume']\n",
    "print(df.corr())"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "按照一个简单的相关性划分表的话\n",
    "\n",
    "        相关系数\n",
    "        0.8-1.0 极强相关\n",
    "        0.6-0.8 强相关\n",
    "        0.4-0.6 中等程度相关\n",
    "        0.2-0.4 弱相关 　　\n",
    "        0.0-0.2 极弱相关或无相关\n",
    "似乎每日收盘价与开盘价之差与当日成交量之间有那么一点点中等程度的正相关性。"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.7.2"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
